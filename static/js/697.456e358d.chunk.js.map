{"version":3,"file":"static/js/697.456e358d.chunk.js","mappings":"2JAEA,MAkDA,EAlDcA,IAAc,IAAb,IAAEC,GAAKD,EAClB,MAAME,GAAWC,EAAAA,EAAAA,QAAO,OACjBC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,GAGrCC,EAAwBA,KAC1B,GAAIL,EAASM,QAAS,CAClB,MAAM,IAAEC,EAAG,OAAEC,GAAWR,EAASM,QAAQG,wBACnCP,EAAYK,EAAMG,OAAOC,aAAeH,GAAU,EACxDL,EAAaD,EACjB,IAIJU,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAeA,KACjBR,GAAuB,EAK3B,OAFAK,OAAOI,iBAAiB,SAAUD,GAClCR,IACO,KACHK,OAAOK,oBAAoB,SAAUF,EAAa,CACrD,GACF,KAGHD,EAAAA,EAAAA,YAAU,KACFV,GAAaF,EAASM,SAAWN,EAASM,QAAQU,OAClDhB,EAASM,QAAQW,QACTf,GAAaF,EAASM,SAAYN,EAASM,QAAQU,MAC3D,GAEL,CAACd,IAOJ,OACIgB,EAAAA,EAAAA,KAAA,OAAKC,IAAKnB,EAAUoB,QANCC,KAErBX,OAAOY,KAAKvB,EAAK,SAAS,EAIoBwB,UAC1CC,EAAAA,EAAAA,MAAA,SAAOC,UAAU,OAAOC,OAAK,EAACC,UAAQ,EAACC,MAAI,EAACC,MAAM,OAAMN,SAAA,EACpDL,EAAAA,EAAAA,KAAA,UAAQnB,IAAKA,EAAK+B,KAAK,cAAc,mDAGvC,E,8QCtCC,SAASC,IAEpB,MAAMC,EAAS,CACZC,EACAC,EACAC,EACAC,EACAC,GAEH,OACIb,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBF,SAAA,EACjCL,EAAAA,EAAAA,KAAA,OAAKO,UAAU,6CAA4CF,UACvDL,EAAAA,EAAAA,KAAA,OACIO,UAAU,wEACVa,MAAO,CACHC,MAAO,qBAEPC,WAAY,gBAEZC,YAAa,qBACbC,YAAa,OACbC,YAAa,EACbC,aAAc,EACdC,cAAe,SACfC,gBAAiB,oBACnBvB,SACL,cAILL,EAAAA,EAAAA,KAAA,OAAK6B,MAAM,MAAKxB,SACXS,EAAOgB,KAAI,CAACC,EAAGC,KACZhC,EAAAA,EAAAA,KAAA,OAAKO,UAAU,sBAAqBF,UAO/BL,EAAAA,EAAAA,KAACiC,EAAS,CAAapD,KAAKqD,EAAAA,EAAAA,IAAcH,IAA1BC,IAPqBA,SAa9D,C","sources":["components/videos/mapVideos.js","components/videos/video.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\n\r\nconst Video = ({ src }) => {\r\n    const videoRef = useRef(null);\r\n    const [isVisible, setIsVisible] = useState(false);\r\n\r\n    // Function to handle video visibility\r\n    const handleVideoVisibility = () => {\r\n        if (videoRef.current) {\r\n            const { top, bottom } = videoRef.current.getBoundingClientRect();\r\n            const isVisible = top < window.innerHeight && bottom >= 0;\r\n            setIsVisible(isVisible);\r\n        }\r\n    };\r\n\r\n    // Event listener to check video visibility on scroll\r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n            handleVideoVisibility();\r\n        };\r\n\r\n        window.addEventListener('scroll', handleScroll);\r\n        handleVideoVisibility(); // Initial check on component mount\r\n        return () => {\r\n            window.removeEventListener('scroll', handleScroll);\r\n        };\r\n    }, []);\r\n\r\n    // Play or pause the video based on visibility\r\n    useEffect(() => {\r\n        if (isVisible && videoRef.current && videoRef.current.paused) {\r\n            videoRef.current.play();\r\n        } else if (!isVisible && videoRef.current && !videoRef.current.paused) {\r\n            //   videoRef.current.pause();\r\n        }\r\n    }, [isVisible]);\r\n\r\n    const handleVideoClick = () => {\r\n        // Open the video URL in a new tab\r\n        window.open(src, '_blank');\r\n    };\r\n\r\n    return (\r\n        <div ref={videoRef} onClick={handleVideoClick}>\r\n            <video className='mb-3' muted autoPlay loop width=\"100%\" >\r\n                <source src={src} type=\"video/mp4\" />\r\n                Your browser does not support the video tag.\r\n            </video>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Video;\r\n","import React from 'react';\r\nimport { toAbsoluteUrl } from '../../utils/utlis';\r\nimport MapVideos from './mapVideos';\r\nimport Video1 from './videosSrc/video_1.mp4';\r\nimport Video2 from './videosSrc/video_2.mp4';\r\nimport Video3 from './videosSrc/video_3.mp4';\r\nimport Video4 from './videosSrc/video_4.mp4';\r\nimport Video5 from './videosSrc/video_5.mp4';\r\n\r\n\r\nexport default function video() {\r\n\r\n    const videos = [\r\n       Video1,\r\n       Video2,\r\n       Video3,\r\n       Video4,\r\n       Video5\r\n    ]\r\n    return (\r\n        <div className=\"container min-vh-100\">\r\n            <div className=\"align-center editable-content-holder mt-4 \">\r\n                <div\r\n                    className=\"main-header align-center font-size-36 semi-bold editable-content mt-3\"\r\n                    style={{\r\n                        color: \"rgb(216, 119, 140)\",\r\n                        // minHeight: \"auto\",\r\n                        fontFamily: '\"Proza Libre\"',\r\n                        // lineHeight: \"1.4\",\r\n                        borderColor: \"rgb(254, 163, 142)\",\r\n                        borderStyle: \"none\",\r\n                        borderWidth: 0,\r\n                        borderRadius: 0,\r\n                        letterSpacing: \"0.25px\",\r\n                        backgroundColor: \"rgba(0, 0, 0, 0)\"\r\n                    }}\r\n                >\r\n                    Videos\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                {videos.map((x, index) => (\r\n                    <div className=\"col-lg-4 col-md-12 \" key={index}>\r\n                        {/* <video className='mb-3' autoPlay loop playsinline width=\"100%\" >\r\n                            <source\r\n                                src={toAbsoluteUrl(x)}\r\n                                type=\"video/mp4\"\r\n                            />\r\n                        </video> */}\r\n                         <MapVideos key={index} src={toAbsoluteUrl(x)} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"names":["_ref","src","videoRef","useRef","isVisible","setIsVisible","useState","handleVideoVisibility","current","top","bottom","getBoundingClientRect","window","innerHeight","useEffect","handleScroll","addEventListener","removeEventListener","paused","play","_jsx","ref","onClick","handleVideoClick","open","children","_jsxs","className","muted","autoPlay","loop","width","type","video","videos","Video1","Video2","Video3","Video4","Video5","style","color","fontFamily","borderColor","borderStyle","borderWidth","borderRadius","letterSpacing","backgroundColor","class","map","x","index","MapVideos","toAbsoluteUrl"],"sourceRoot":""}